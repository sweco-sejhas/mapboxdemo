// Generated by CoffeeScript 1.6.2
(function() {
  $(function() {
    var drawFeature, map, markers, osm, selectFeature, selectedFeature;

    osm = new OpenLayers.Layer.XYZ('mapbox', ["http://a.tiles.mapbox.com/v3/bjornharrtell.map-em5abk65/${z}/${x}/${y}.png", "http://b.tiles.mapbox.com/v3/bjornharrtell.map-em5abk65/${z}/${x}/${y}.png", "http://c.tiles.mapbox.com/v3/bjornharrtell.map-em5abk65/${z}/${x}/${y}.png", "http://d.tiles.mapbox.com/v3/bjornharrtell.map-em5abk65/${z}/${x}/${y}.png"], {
      attribution: "&copy; <a href='http://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors",
      sphericalMercator: true,
      wrapDateLine: true
    });
    map = new OpenLayers.Map({
      div: 'map',
      layers: [osm],
      center: [1480000, 7520000],
      zoom: 9,
      units: 'm',
      controls: [new OpenLayers.Control.Navigation, new OpenLayers.Control.Attribution]
    });
    markers = new OpenLayers.Layer.Vector('markers', {
      styleMap: new OpenLayers.StyleMap({
        "default": {
          strokeWidth: 0.5,
          pointRadius: 5,
          fillColor: '#ff0000'
        }
      })
    });
    map.addLayer(markers);
    drawFeature = new OpenLayers.Control.DrawFeature(markers, OpenLayers.Handler.Point);
    map.addControl(drawFeature);
    selectFeature = new OpenLayers.Control.SelectFeature(markers);
    map.addControl(selectFeature);
    selectFeature.activate();
    selectedFeature = null;
    markers.events.register('featureselected', null, function(e) {
      var f;

      $('.panel').fadeIn();
      f = e.feature;
      $('#v1').prop('checked', f.attributes.v1);
      $('#v2').prop('checked', f.attributes.v2);
      $('#v3').prop('checked', f.attributes.v3);
      $('#errortitle').text("Felanm√§lan " + f.fid);
      return selectedFeature = f;
    });
    $('#draw').button({
      icons: {
        primary: "ui-icon-pencil"
      }
    }).click(function() {
      drawFeature.activate();
      return markers.events.register('featureadded', null, function(e) {
        $('.panel').fadeIn();
        drawFeature.deactivate();
        e.feature.fid = 'ny';
        return selectFeature.select(e.feature);
      });
    });
    $('#login').button().click(function() {
      var a, f, i, _i, _len, _ref, _results;

      $('#login').fadeOut();
      $('#draw').fadeIn();
      a = {
        v1: false,
        v2: false,
        v3: false
      };
      markers.addFeatures([new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point(1445067, 7475858), a), new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point(1442443, 7441135), a), new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point(1433729, 7571251), a)]);
      _ref = markers.features;
      _results = [];
      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
        f = _ref[i];
        _results.push(f.fid = i + 1);
      }
      return _results;
    });
    return $('input[type=checkbox]').click(function(e) {
      return selectedFeature != null ? selectedFeature.attributes[this.id] = $(this).prop('checked') : void 0;
    });
  });

}).call(this);

/*
//@ sourceMappingURL=app.map
*/
